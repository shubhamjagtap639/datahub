apply plugin: "com.moowork.node"

node {
  // Version of node to use.
  version = '8.12.0'

  // Version of Yarn to use.
  yarnVersion = '1.10.1'

  // Base URL for fetching node distributions (change if you have a mirror).
  distBaseUrl = 'https://nodejs.org/dist'

  // If true, it will download node using above parameters.
  // If false, it will try to use globally installed node.
  download = true

  // Set the work directory for unpacking node
  workDir = file("${project.buildDir}/nodejs")

  // Set the work directory for NPM
  yarnWorkDir = file("${project.buildDir}/yarn")

  // Set the work directory where node_modules should be located
  nodeModulesDir = file("${project.projectDir}")
}

task emberServe(type: NodeTask, dependsOn: yarn) {
  script = file('node_modules/.bin/ember')
  args = ['serve']
}

task emberBuild(type: NodeTask, dependsOn: yarn) {
  script = file('node_modules/.bin/ember')
  args = ['build', '--environment', 'production']
}

task emberTest(type: NodeTask, dependsOn: yarn) {
  environment = ['COVERAGE': 'true']
  script = file('node_modules/.bin/ember')
  args = ['test', '--launch', 'Chrome']
}

task emberCoverage(type: NodeTask, dependsOn: emberTest) {
  script = file('node_modules/codecov/bin/codecov')
  args = ['-f', 'coverage/coverage-final.json']
}

task execEmber(type: NodeTask) {
  script = file('node_modules/.bin/ember')
  if ( project.hasProperty('emberArgs') ) {
    args = emberArgs.tokenize();
  }
}

task execYarn(type: YarnTask) {
  if ( project.hasProperty('yarnArgs') ) {
    args = yarnArgs.tokenize();
  }
}

clean {
  delete 'node_modules'
  delete 'dist'
  delete 'tmp'
}
