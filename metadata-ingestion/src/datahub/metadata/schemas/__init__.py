# flake8: noqa

# This file is autogenerated by /metadata-ingestion/scripts/avro_codegen.py
# Do not modify manually!

# fmt: off

import functools
import pathlib

def _load_schema(schema_name: str) -> str:
    return (pathlib.Path(__file__).parent / f"{schema_name}.avsc").read_text()

@functools.lru_cache(maxsize=None)
def getMetadataChangeEventSchema() -> str:
    return _load_schema("MetadataChangeEvent")

@functools.lru_cache(maxsize=None)
def getMetadataChangeProposalSchema() -> str:
    return _load_schema("MetadataChangeProposal")

@functools.lru_cache(maxsize=None)
def getUsageAggregationSchema() -> str:
    return _load_schema("UsageAggregation")

@functools.lru_cache(maxsize=None)
def getChartInfoSchema() -> str:
    return _load_schema("ChartInfo")

@functools.lru_cache(maxsize=None)
def getChartQuerySchema() -> str:
    return _load_schema("ChartQuery")

@functools.lru_cache(maxsize=None)
def getEditableChartPropertiesSchema() -> str:
    return _load_schema("EditableChartProperties")

@functools.lru_cache(maxsize=None)
def getBrowsePathsSchema() -> str:
    return _load_schema("BrowsePaths")

@functools.lru_cache(maxsize=None)
def getCostSchema() -> str:
    return _load_schema("Cost")

@functools.lru_cache(maxsize=None)
def getDeprecationSchema() -> str:
    return _load_schema("Deprecation")

@functools.lru_cache(maxsize=None)
def getGlobalTagsSchema() -> str:
    return _load_schema("GlobalTags")

@functools.lru_cache(maxsize=None)
def getGlossaryTermsSchema() -> str:
    return _load_schema("GlossaryTerms")

@functools.lru_cache(maxsize=None)
def getInstitutionalMemorySchema() -> str:
    return _load_schema("InstitutionalMemory")

@functools.lru_cache(maxsize=None)
def getOwnershipSchema() -> str:
    return _load_schema("Ownership")

@functools.lru_cache(maxsize=None)
def getStatusSchema() -> str:
    return _load_schema("Status")

@functools.lru_cache(maxsize=None)
def getDashboardInfoSchema() -> str:
    return _load_schema("DashboardInfo")

@functools.lru_cache(maxsize=None)
def getEditableDashboardPropertiesSchema() -> str:
    return _load_schema("EditableDashboardProperties")

@functools.lru_cache(maxsize=None)
def getDataFlowInfoSchema() -> str:
    return _load_schema("DataFlowInfo")

@functools.lru_cache(maxsize=None)
def getDataJobInfoSchema() -> str:
    return _load_schema("DataJobInfo")

@functools.lru_cache(maxsize=None)
def getDataJobInputOutputSchema() -> str:
    return _load_schema("DataJobInputOutput")

@functools.lru_cache(maxsize=None)
def getEditableDataFlowPropertiesSchema() -> str:
    return _load_schema("EditableDataFlowProperties")

@functools.lru_cache(maxsize=None)
def getEditableDataJobPropertiesSchema() -> str:
    return _load_schema("EditableDataJobProperties")

@functools.lru_cache(maxsize=None)
def getDataPlatformInfoSchema() -> str:
    return _load_schema("DataPlatformInfo")

@functools.lru_cache(maxsize=None)
def getDataProcessInfoSchema() -> str:
    return _load_schema("DataProcessInfo")

@functools.lru_cache(maxsize=None)
def getDatasetDeprecationSchema() -> str:
    return _load_schema("DatasetDeprecation")

@functools.lru_cache(maxsize=None)
def getDatasetProfileSchema() -> str:
    return _load_schema("DatasetProfile")

@functools.lru_cache(maxsize=None)
def getDatasetPropertiesSchema() -> str:
    return _load_schema("DatasetProperties")

@functools.lru_cache(maxsize=None)
def getDatasetUpstreamLineageSchema() -> str:
    return _load_schema("DatasetUpstreamLineage")

@functools.lru_cache(maxsize=None)
def getDatasetUsageStatisticsSchema() -> str:
    return _load_schema("DatasetUsageStatistics")

@functools.lru_cache(maxsize=None)
def getEditableDatasetPropertiesSchema() -> str:
    return _load_schema("EditableDatasetProperties")

@functools.lru_cache(maxsize=None)
def getUpstreamLineageSchema() -> str:
    return _load_schema("UpstreamLineage")

@functools.lru_cache(maxsize=None)
def getGlossaryNodeInfoSchema() -> str:
    return _load_schema("GlossaryNodeInfo")

@functools.lru_cache(maxsize=None)
def getGlossaryRelatedTermsSchema() -> str:
    return _load_schema("GlossaryRelatedTerms")

@functools.lru_cache(maxsize=None)
def getGlossaryTermInfoSchema() -> str:
    return _load_schema("GlossaryTermInfo")

@functools.lru_cache(maxsize=None)
def getCorpGroupInfoSchema() -> str:
    return _load_schema("CorpGroupInfo")

@functools.lru_cache(maxsize=None)
def getCorpUserEditableInfoSchema() -> str:
    return _load_schema("CorpUserEditableInfo")

@functools.lru_cache(maxsize=None)
def getCorpUserInfoSchema() -> str:
    return _load_schema("CorpUserInfo")

@functools.lru_cache(maxsize=None)
def getGroupMembershipSchema() -> str:
    return _load_schema("GroupMembership")

@functools.lru_cache(maxsize=None)
def getChartKeySchema() -> str:
    return _load_schema("ChartKey")

@functools.lru_cache(maxsize=None)
def getCorpGroupKeySchema() -> str:
    return _load_schema("CorpGroupKey")

@functools.lru_cache(maxsize=None)
def getCorpUserKeySchema() -> str:
    return _load_schema("CorpUserKey")

@functools.lru_cache(maxsize=None)
def getDashboardKeySchema() -> str:
    return _load_schema("DashboardKey")

@functools.lru_cache(maxsize=None)
def getDataFlowKeySchema() -> str:
    return _load_schema("DataFlowKey")

@functools.lru_cache(maxsize=None)
def getDataHubPolicyKeySchema() -> str:
    return _load_schema("DataHubPolicyKey")

@functools.lru_cache(maxsize=None)
def getDataJobKeySchema() -> str:
    return _load_schema("DataJobKey")

@functools.lru_cache(maxsize=None)
def getDataPlatformKeySchema() -> str:
    return _load_schema("DataPlatformKey")

@functools.lru_cache(maxsize=None)
def getDataProcessKeySchema() -> str:
    return _load_schema("DataProcessKey")

@functools.lru_cache(maxsize=None)
def getDatasetKeySchema() -> str:
    return _load_schema("DatasetKey")

@functools.lru_cache(maxsize=None)
def getGlossaryNodeKeySchema() -> str:
    return _load_schema("GlossaryNodeKey")

@functools.lru_cache(maxsize=None)
def getGlossaryTermKeySchema() -> str:
    return _load_schema("GlossaryTermKey")

@functools.lru_cache(maxsize=None)
def getMLFeatureKeySchema() -> str:
    return _load_schema("MLFeatureKey")

@functools.lru_cache(maxsize=None)
def getMLFeatureTableKeySchema() -> str:
    return _load_schema("MLFeatureTableKey")

@functools.lru_cache(maxsize=None)
def getMLModelDeploymentKeySchema() -> str:
    return _load_schema("MLModelDeploymentKey")

@functools.lru_cache(maxsize=None)
def getMLModelGroupKeySchema() -> str:
    return _load_schema("MLModelGroupKey")

@functools.lru_cache(maxsize=None)
def getMLModelKeySchema() -> str:
    return _load_schema("MLModelKey")

@functools.lru_cache(maxsize=None)
def getMLPrimaryKeyKeySchema() -> str:
    return _load_schema("MLPrimaryKeyKey")

@functools.lru_cache(maxsize=None)
def getSchemaFieldKeySchema() -> str:
    return _load_schema("SchemaFieldKey")

@functools.lru_cache(maxsize=None)
def getTagKeySchema() -> str:
    return _load_schema("TagKey")

@functools.lru_cache(maxsize=None)
def getCaveatsAndRecommendationsSchema() -> str:
    return _load_schema("CaveatsAndRecommendations")

@functools.lru_cache(maxsize=None)
def getEthicalConsiderationsSchema() -> str:
    return _load_schema("EthicalConsiderations")

@functools.lru_cache(maxsize=None)
def getEvaluationDataSchema() -> str:
    return _load_schema("EvaluationData")

@functools.lru_cache(maxsize=None)
def getIntendedUseSchema() -> str:
    return _load_schema("IntendedUse")

@functools.lru_cache(maxsize=None)
def getMLFeaturePropertiesSchema() -> str:
    return _load_schema("MLFeatureProperties")

@functools.lru_cache(maxsize=None)
def getMLFeatureTablePropertiesSchema() -> str:
    return _load_schema("MLFeatureTableProperties")

@functools.lru_cache(maxsize=None)
def getMLHyperParamSchema() -> str:
    return _load_schema("MLHyperParam")

@functools.lru_cache(maxsize=None)
def getMLMetricSchema() -> str:
    return _load_schema("MLMetric")

@functools.lru_cache(maxsize=None)
def getMLModelDeploymentPropertiesSchema() -> str:
    return _load_schema("MLModelDeploymentProperties")

@functools.lru_cache(maxsize=None)
def getMLModelFactorPromptsSchema() -> str:
    return _load_schema("MLModelFactorPrompts")

@functools.lru_cache(maxsize=None)
def getMLModelGroupPropertiesSchema() -> str:
    return _load_schema("MLModelGroupProperties")

@functools.lru_cache(maxsize=None)
def getMLModelPropertiesSchema() -> str:
    return _load_schema("MLModelProperties")

@functools.lru_cache(maxsize=None)
def getMLPrimaryKeyPropertiesSchema() -> str:
    return _load_schema("MLPrimaryKeyProperties")

@functools.lru_cache(maxsize=None)
def getMetricsSchema() -> str:
    return _load_schema("Metrics")

@functools.lru_cache(maxsize=None)
def getQuantitativeAnalysesSchema() -> str:
    return _load_schema("QuantitativeAnalyses")

@functools.lru_cache(maxsize=None)
def getSourceCodeSchema() -> str:
    return _load_schema("SourceCode")

@functools.lru_cache(maxsize=None)
def getTrainingDataSchema() -> str:
    return _load_schema("TrainingData")

@functools.lru_cache(maxsize=None)
def getDataHubPolicyInfoSchema() -> str:
    return _load_schema("DataHubPolicyInfo")

@functools.lru_cache(maxsize=None)
def getEditableSchemaMetadataSchema() -> str:
    return _load_schema("EditableSchemaMetadata")

@functools.lru_cache(maxsize=None)
def getSchemaMetadataSchema() -> str:
    return _load_schema("SchemaMetadata")

@functools.lru_cache(maxsize=None)
def getTagPropertiesSchema() -> str:
    return _load_schema("TagProperties")
# fmt: on
