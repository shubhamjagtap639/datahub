plugins {
    id 'java' // required by versioning
}

apply from: "../gradle/versioning/versioning.gradle"

ext {
    quickstart_modules = [
            ':docker:elasticsearch-setup',
            ':docker:mysql-setup',
            ':docker:kafka-setup',
            ':datahub-upgrade',
            ':metadata-jobs:mce-consumer-job',
            ':metadata-jobs:mae-consumer-job',
            ':metadata-service:war',
            ':datahub-frontend',
    ]
}

task quickstart(type: Exec, dependsOn: ':metadata-ingestion:install') {
    dependsOn(quickstart_modules.collect { it + ':dockerTag' })
    shouldRunAfter ':metadata-ingestion:clean', 'quickstartNuke'

    environment "DATAHUB_TELEMETRY_ENABLED", "false"
    environment "DOCKER_COMPOSE_BASE", "file://${rootProject.projectDir}"

    def cmd = [
            'source ../metadata-ingestion/venv/bin/activate && ',
            'datahub docker quickstart',
            '--standalone_consumers',
            '--version', "v${version}",
            '--dump-logs-on-failure'
    ]
    commandLine 'bash', '-c', cmd.join(" ")
}

task quickstartNuke(type: Exec, dependsOn: ":metadata-ingestion:install") {
    shouldRunAfter(':metadata-ingestion:clean')

    def cmd = [
            'source ../metadata-ingestion/venv/bin/activate && ',
            'datahub docker nuke'
    ]
    commandLine 'bash', '-c',  cmd.join(" ")
}

task quickstartRebuild() {
    dependsOn(quickstart_modules.collect { it + ':clean' })
    dependsOn'quickstart'
}
