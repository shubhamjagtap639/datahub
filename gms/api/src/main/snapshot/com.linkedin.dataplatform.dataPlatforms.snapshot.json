{
  "models" : [ {
    "type" : "record",
    "name" : "DataPlatformInfo",
    "namespace" : "com.linkedin.dataplatform",
    "doc" : "Information about a data platform",
    "fields" : [ {
      "name" : "name",
      "type" : "string",
      "doc" : "Name of the data platform",
      "validate" : {
        "strlen" : {
          "max" : 15
        }
      }
    }, {
      "name" : "type",
      "type" : {
        "type" : "enum",
        "name" : "PlatformType",
        "doc" : "Platform types available at LinkedIn",
        "symbols" : [ "FILE_SYSTEM", "KEY_VALUE_STORE", "MESSAGE_BROKER", "OBJECT_STORE", "OLAP_DATASTORE", "OTHERS", "QUERY_ENGINE", "RELATIONAL_DB", "SEARCH_ENGINE" ],
        "symbolDocs" : {
          "FILE_SYSTEM" : "Value for a file system, e.g. hdfs",
          "KEY_VALUE_STORE" : "Value for a key value store, e.g. espresso, voldemort",
          "MESSAGE_BROKER" : "Value for a message broker, e.g. kafka",
          "OBJECT_STORE" : "Value for an object store, e.g. ambry",
          "OLAP_DATASTORE" : "Value for an OLAP datastore, e.g. pinot",
          "OTHERS" : "Value for other platforms, e.g salesforce, dovetail",
          "QUERY_ENGINE" : "Value for a query engine, e.g. presto",
          "RELATIONAL_DB" : "Value for a relational database, e.g. oracle, mysql",
          "SEARCH_ENGINE" : "Value for a search engine, e.g seas"
        }
      },
      "doc" : "Platform type this data platform describes"
    }, {
      "name" : "datasetNameDelimiter",
      "type" : "string",
      "doc" : "The delimiter in the dataset names on the data platform, e.g. '/' for HDFS and '.' for Oracle"
    } ]
  }, "com.linkedin.dataplatform.PlatformType" ],
  "schema" : {
    "name" : "dataPlatforms",
    "namespace" : "com.linkedin.dataplatform",
    "path" : "/dataPlatforms",
    "schema" : "com.linkedin.dataplatform.DataPlatformInfo",
    "doc" : "Resource provides information about various data platforms.\n\ngenerated from: com.linkedin.metadata.resources.dataplatform.DataPlatforms",
    "collection" : {
      "identifier" : {
        "name" : "platformName",
        "type" : "string"
      },
      "supports" : [ "get", "get_all" ],
      "methods" : [ {
        "method" : "get"
      }, {
        "method" : "get_all",
        "pagingSupported" : true
      } ],
      "entity" : {
        "path" : "/dataPlatforms/{platformName}"
      }
    }
  }
}