{
  "models" : [ {
    "type" : "typeref",
    "name" : "CorpuserUrn",
    "namespace" : "com.linkedin.common",
    "doc" : "Corporate user's AD/LDAP login",
    "ref" : "string",
    "java" : {
      "class" : "com.linkedin.common.urn.CorpuserUrn"
    },
    "validate" : {
      "com.linkedin.common.validator.TypedUrnValidator" : {
        "accessible" : true,
        "constructable" : true,
        "doc" : "Corporate user's AD/LDAP login",
        "entityType" : "corpuser",
        "fields" : [ {
          "doc" : "The name of the AD/LDAP user.",
          "maxLength" : 20,
          "name" : "username",
          "type" : "string"
        } ],
        "maxLength" : 36,
        "name" : "Corpuser",
        "namespace" : "li",
        "owners" : [ "urn:li:corpuser:fbar", "urn:li:corpuser:bfoo" ],
        "owningTeam" : "urn:li:internalTeam:security"
      }
    }
  }, {
    "type" : "typeref",
    "name" : "EmailAddress",
    "namespace" : "com.linkedin.common",
    "ref" : "string"
  }, {
    "type" : "record",
    "name" : "GlobalTags",
    "namespace" : "com.linkedin.common",
    "doc" : "Tag aspect used for applying tags to an entity",
    "fields" : [ {
      "name" : "tags",
      "type" : {
        "type" : "array",
        "items" : {
          "type" : "record",
          "name" : "TagAssociation",
          "doc" : "Properties of an applied tag. For now, just an Urn. In the future we can extend this with other properties, e.g.\npropagation parameters.",
          "fields" : [ {
            "name" : "tag",
            "type" : {
              "type" : "typeref",
              "name" : "TagUrn",
              "doc" : "Globally defined tag",
              "ref" : "string",
              "java" : {
                "class" : "com.linkedin.common.urn.TagUrn"
              },
              "validate" : {
                "com.linkedin.common.validator.TypedUrnValidator" : {
                  "accessible" : true,
                  "constructable" : true,
                  "doc" : "Globally defined tags",
                  "entityType" : "tag",
                  "fields" : [ {
                    "doc" : "tag name",
                    "maxLength" : 200,
                    "name" : "name",
                    "type" : "string"
                  } ],
                  "maxLength" : 220,
                  "name" : "Tag",
                  "namespace" : "li",
                  "owners" : [ ],
                  "owningTeam" : "urn:li:internalTeam:datahub"
                }
              }
            },
            "doc" : "Urn of the applied tag",
            "Searchable" : {
              "fieldName" : "tags",
              "fieldType" : "URN_PARTIAL",
              "hasValuesFieldName" : "hasTags"
            }
          } ]
        }
      },
      "doc" : "Tags associated with a given entity"
    } ],
    "Aspect" : {
      "name" : "globalTags"
    }
  }, {
    "type" : "record",
    "name" : "Status",
    "namespace" : "com.linkedin.common",
    "doc" : "The status metadata of an entity, e.g. dataset, metric, feature, etc.",
    "fields" : [ {
      "name" : "removed",
      "type" : "boolean",
      "doc" : "whether the entity is removed or not",
      "default" : false,
      "Searchable" : {
        "fieldType" : "BOOLEAN"
      }
    } ],
    "Aspect" : {
      "name" : "status"
    }
  }, "com.linkedin.common.TagAssociation", "com.linkedin.common.TagUrn", {
    "type" : "typeref",
    "name" : "Url",
    "namespace" : "com.linkedin.common",
    "ref" : "string",
    "java" : {
      "class" : "com.linkedin.common.url.Url",
      "coercerClass" : "com.linkedin.common.url.UrlCoercer"
    }
  }, {
    "type" : "typeref",
    "name" : "Urn",
    "namespace" : "com.linkedin.common",
    "ref" : "string",
    "java" : {
      "class" : "com.linkedin.common.urn.Urn"
    }
  }, {
    "type" : "record",
    "name" : "CorpUser",
    "namespace" : "com.linkedin.identity",
    "doc" : "Metadata for a corp user",
    "fields" : [ {
      "name" : "username",
      "type" : "string",
      "doc" : "Username of the corp user"
    }, {
      "name" : "info",
      "type" : {
        "type" : "record",
        "name" : "CorpUserInfo",
        "doc" : "Linkedin corp user information",
        "fields" : [ {
          "name" : "active",
          "type" : "boolean",
          "doc" : "Whether the corpUser is active, ref: https://iwww.corp.linkedin.com/wiki/cf/display/GTSD/Accessing+Active+Directory+via+LDAP+tools",
          "Searchable" : {
            "fieldType" : "BOOLEAN",
            "weightsPerFieldValue" : {
              "true" : 2.0
            }
          }
        }, {
          "name" : "displayName",
          "type" : "string",
          "doc" : "displayName of this user ,  e.g.  Hang Zhang(DataHQ)",
          "optional" : true
        }, {
          "name" : "email",
          "type" : "com.linkedin.common.EmailAddress",
          "doc" : "email address of this user",
          "Searchable" : {
            "fieldType" : "KEYWORD",
            "queryByDefault" : true
          }
        }, {
          "name" : "title",
          "type" : "string",
          "doc" : "title of this user",
          "optional" : true,
          "Searchable" : {
            "fieldType" : "KEYWORD",
            "queryByDefault" : true
          }
        }, {
          "name" : "managerUrn",
          "type" : "com.linkedin.common.CorpuserUrn",
          "doc" : "direct manager of this user",
          "optional" : true,
          "Relationship" : {
            "entityTypes" : [ "corpUser" ],
            "name" : "ReportsTo"
          },
          "Searchable" : {
            "fieldName" : "managerLdap",
            "fieldType" : "URN",
            "queryByDefault" : true
          }
        }, {
          "name" : "departmentId",
          "type" : "long",
          "doc" : "department id this user belong to",
          "optional" : true
        }, {
          "name" : "departmentName",
          "type" : "string",
          "doc" : "department name this user belong to",
          "optional" : true
        }, {
          "name" : "firstName",
          "type" : "string",
          "doc" : "first name of this user",
          "optional" : true
        }, {
          "name" : "lastName",
          "type" : "string",
          "doc" : "last name of this user",
          "optional" : true
        }, {
          "name" : "fullName",
          "type" : "string",
          "doc" : "Common name of this user, format is firstName + lastName (split by a whitespace)",
          "optional" : true,
          "Searchable" : {
            "boostScore" : 10.0,
            "fieldType" : "TEXT_PARTIAL",
            "queryByDefault" : true
          }
        }, {
          "name" : "countryCode",
          "type" : "string",
          "doc" : "two uppercase letters country code. e.g.  US",
          "optional" : true
        } ],
        "Aspect" : {
          "EntityUrns" : [ "com.linkedin.common.CorpuserUrn" ],
          "name" : "corpUserInfo"
        }
      },
      "doc" : "Information of the corp user",
      "optional" : true
    }, {
      "name" : "editableInfo",
      "type" : {
        "type" : "record",
        "name" : "CorpUserEditableInfo",
        "doc" : "Linkedin corp user information that can be edited from UI",
        "fields" : [ {
          "name" : "aboutMe",
          "type" : "string",
          "doc" : "About me section of the user",
          "optional" : true
        }, {
          "name" : "teams",
          "type" : {
            "type" : "array",
            "items" : "string"
          },
          "doc" : "Teams that the user belongs to e.g. Metadata",
          "default" : [ ],
          "Searchable" : {
            "/*" : {
              "fieldType" : "TEXT"
            }
          }
        }, {
          "name" : "skills",
          "type" : {
            "type" : "array",
            "items" : "string"
          },
          "doc" : "Skills that the user possesses e.g. Machine Learning",
          "default" : [ ],
          "Searchable" : {
            "/*" : {
              "fieldType" : "TEXT"
            }
          }
        }, {
          "name" : "pictureLink",
          "type" : "com.linkedin.common.Url",
          "doc" : "A URL which points to a picture which user wants to set as a profile photo",
          "default" : "https://raw.githubusercontent.com/linkedin/datahub/master/datahub-web/packages/data-portal/public/assets/images/default_avatar.png"
        } ],
        "Aspect" : {
          "EntityUrns" : [ "com.linkedin.common.CorpuserUrn" ],
          "name" : "corpUserEditableInfo"
        }
      },
      "doc" : "Editable information of the corp user",
      "optional" : true
    }, {
      "name" : "globalTags",
      "type" : "com.linkedin.common.GlobalTags",
      "doc" : "List of global tags applied to the corp user",
      "optional" : true
    } ]
  }, "com.linkedin.identity.CorpUserEditableInfo", "com.linkedin.identity.CorpUserInfo", {
    "type" : "record",
    "name" : "CorpUserResourceKey",
    "namespace" : "com.linkedin.identity",
    "doc" : "Key for CorpUser resource",
    "fields" : [ {
      "name" : "name",
      "type" : "string",
      "doc" : "ldap name e.g. hzhang2, ywang5",
      "validate" : {
        "strlen" : {
          "max" : 20,
          "min" : 1
        }
      }
    } ]
  }, {
    "type" : "typeref",
    "name" : "CorpUserAspect",
    "namespace" : "com.linkedin.metadata.aspect",
    "doc" : "A union of all supported metadata aspects for a CorpUser",
    "ref" : [ {
      "type" : "record",
      "name" : "CorpUserKey",
      "namespace" : "com.linkedin.metadata.key",
      "doc" : "Key for a CorpUser",
      "fields" : [ {
        "name" : "username",
        "type" : "string",
        "doc" : "The name of the AD/LDAP user.",
        "Searchable" : {
          "boostScore" : 2.0,
          "enableAutocomplete" : true,
          "fieldName" : "ldap",
          "fieldType" : "TEXT_PARTIAL"
        }
      } ],
      "Aspect" : {
        "name" : "corpUserKey"
      }
    }, "com.linkedin.identity.CorpUserInfo", "com.linkedin.identity.CorpUserEditableInfo", "com.linkedin.common.GlobalTags", "com.linkedin.common.Status" ]
  }, "com.linkedin.metadata.key.CorpUserKey", {
    "type" : "record",
    "name" : "AggregationMetadata",
    "namespace" : "com.linkedin.metadata.query",
    "fields" : [ {
      "name" : "name",
      "type" : "string",
      "doc" : "The name of the aggregation, e.g, platform, origin"
    }, {
      "name" : "aggregations",
      "type" : {
        "type" : "map",
        "values" : "long"
      },
      "doc" : "List of aggregations showing the number of documents falling into each bucket. e.g, for platform aggregation, the bucket can be hive, kafka, etc"
    } ]
  }, {
    "type" : "record",
    "name" : "AutoCompleteResult",
    "namespace" : "com.linkedin.metadata.query",
    "doc" : "The model for the auto complete result",
    "fields" : [ {
      "name" : "query",
      "type" : "string",
      "doc" : "The original chars typed by user"
    }, {
      "name" : "suggestions",
      "type" : {
        "type" : "array",
        "items" : "string"
      },
      "doc" : "A list of typeahead suggestions"
    } ]
  }, {
    "type" : "enum",
    "name" : "Condition",
    "namespace" : "com.linkedin.metadata.query",
    "doc" : "The matching condition in a filter criterion",
    "symbols" : [ "CONTAIN", "END_WITH", "EQUAL", "GREATER_THAN", "GREATER_THAN_OR_EQUAL_TO", "LESS_THAN", "LESS_THAN_OR_EQUAL_TO", "START_WITH" ],
    "symbolDocs" : {
      "CONTAIN" : "Represent the relation: String field contains value, e.g. name contains Profile",
      "END_WITH" : "Represent the relation: String field ends with value, e.g. name ends with Event",
      "EQUAL" : "Represent the relation: field = value, e.g. platform = hdfs",
      "GREATER_THAN" : "Represent the relation greater than, e.g. ownerCount > 5",
      "GREATER_THAN_OR_EQUAL_TO" : "Represent the relation greater than or equal to, e.g. ownerCount >= 5",
      "LESS_THAN" : "Represent the relation less than, e.g. ownerCount < 3",
      "LESS_THAN_OR_EQUAL_TO" : "Represent the relation less than or equal to, e.g. ownerCount <= 3",
      "START_WITH" : "Represent the relation: String field starts with value, e.g. name starts with PageView"
    }
  }, {
    "type" : "record",
    "name" : "Criterion",
    "namespace" : "com.linkedin.metadata.query",
    "doc" : "A criterion for matching a field with given value",
    "fields" : [ {
      "name" : "field",
      "type" : "string",
      "doc" : "The name of the field that the criterion refers to"
    }, {
      "name" : "value",
      "type" : "string",
      "doc" : "The value of the intended field"
    }, {
      "name" : "condition",
      "type" : "Condition",
      "doc" : "The condition for the criterion, e.g. EQUAL, START_WITH",
      "default" : "EQUAL"
    } ]
  }, {
    "type" : "record",
    "name" : "Filter",
    "namespace" : "com.linkedin.metadata.query",
    "doc" : "The filter for finding an record or a collection of records",
    "fields" : [ {
      "name" : "criteria",
      "type" : {
        "type" : "array",
        "items" : "Criterion"
      },
      "doc" : "A list of criteria the filter applies to the query"
    } ]
  }, {
    "type" : "record",
    "name" : "MatchMetadata",
    "namespace" : "com.linkedin.metadata.query",
    "fields" : [ {
      "name" : "matchedFields",
      "type" : {
        "type" : "array",
        "items" : {
          "type" : "record",
          "name" : "MatchedField",
          "fields" : [ {
            "name" : "name",
            "type" : "string",
            "doc" : "Matched field name"
          }, {
            "name" : "value",
            "type" : "string",
            "doc" : "Matched field value"
          } ]
        }
      },
      "doc" : "Matched field name and values"
    } ]
  }, "com.linkedin.metadata.query.MatchedField", {
    "type" : "record",
    "name" : "SearchResultMetadata",
    "namespace" : "com.linkedin.metadata.query",
    "doc" : "The model for the search result",
    "fields" : [ {
      "name" : "searchResultMetadatas",
      "type" : {
        "type" : "array",
        "items" : "AggregationMetadata"
      },
      "doc" : "A list of search result metadata such as aggregations"
    }, {
      "name" : "urns",
      "type" : {
        "type" : "array",
        "items" : "com.linkedin.common.Urn"
      },
      "doc" : "A list of urns corresponding to search documents (in order) as returned by the search index"
    }, {
      "name" : "matches",
      "type" : {
        "type" : "array",
        "items" : "MatchMetadata"
      },
      "doc" : "A list of match metadata for each search result, containing the list of fields in the search document that matched the query",
      "optional" : true
    } ]
  }, {
    "type" : "record",
    "name" : "SortCriterion",
    "namespace" : "com.linkedin.metadata.query",
    "doc" : "Sort order along with the field to sort it on, to be applied to the results.",
    "fields" : [ {
      "name" : "field",
      "type" : "string",
      "doc" : "The name of the field that sorting has to be applied to"
    }, {
      "name" : "order",
      "type" : {
        "type" : "enum",
        "name" : "SortOrder",
        "doc" : "The order used to sort the results",
        "symbols" : [ "ASCENDING", "DESCENDING" ],
        "symbolDocs" : {
          "ASCENDING" : "If results need to be sorted in ascending order",
          "DESCENDING" : "If results need to be sorted in descending order"
        }
      },
      "doc" : "The order to sort the results i.e. ASCENDING or DESCENDING"
    } ]
  }, "com.linkedin.metadata.query.SortOrder", {
    "type" : "record",
    "name" : "BackfillResult",
    "namespace" : "com.linkedin.metadata.restli",
    "doc" : "The model for the result of a backfill",
    "fields" : [ {
      "name" : "entities",
      "type" : {
        "type" : "array",
        "items" : {
          "type" : "record",
          "name" : "BackfillResultEntity",
          "fields" : [ {
            "name" : "urn",
            "type" : "com.linkedin.common.Urn",
            "doc" : "Urn of the backfilled entity"
          }, {
            "name" : "aspects",
            "type" : {
              "type" : "array",
              "items" : "string"
            },
            "doc" : "List of the aspects backfilled for the entity"
          } ]
        }
      },
      "doc" : "List of backfilled entities"
    } ]
  }, "com.linkedin.metadata.restli.BackfillResultEntity", {
    "type" : "record",
    "name" : "CorpUserSnapshot",
    "namespace" : "com.linkedin.metadata.snapshot",
    "doc" : "A metadata snapshot for a specific CorpUser entity.",
    "fields" : [ {
      "name" : "urn",
      "type" : "com.linkedin.common.CorpuserUrn",
      "doc" : "URN for the entity the metadata snapshot is associated with."
    }, {
      "name" : "aspects",
      "type" : {
        "type" : "array",
        "items" : "com.linkedin.metadata.aspect.CorpUserAspect"
      },
      "doc" : "The list of metadata aspects associated with the CorpUser. Depending on the use case, this can either be all, or a selection, of supported aspects."
    } ],
    "Entity" : {
      "keyAspect" : "corpUserKey",
      "name" : "corpuser"
    }
  }, {
    "type" : "record",
    "name" : "EmptyRecord",
    "namespace" : "com.linkedin.restli.common",
    "doc" : "An literally empty record.  Intended as a marker to indicate the absence of content where a record type is required.  If used the underlying DataMap *must* be empty, EmptyRecordValidator is provided to help enforce this.  For example,  CreateRequest extends Request<EmptyRecord> to indicate it has no response body.   Also, a ComplexKeyResource implementation that has no ParamKey should have a signature like XyzResource implements ComplexKeyResource<XyzKey, EmptyRecord, Xyz>.",
    "fields" : [ ],
    "validate" : {
      "com.linkedin.restli.common.EmptyRecordValidator" : { }
    }
  } ],
  "schema" : {
    "annotations" : {
      "deprecated" : { }
    },
    "name" : "corpUsers",
    "namespace" : "com.linkedin.identity",
    "path" : "/corpUsers",
    "schema" : "com.linkedin.identity.CorpUser",
    "doc" : "Deprecated! Use {@link EntityResource} instead.\n\ngenerated from: com.linkedin.metadata.resources.identity.CorpUsers",
    "collection" : {
      "identifier" : {
        "name" : "corpUser",
        "type" : "com.linkedin.identity.CorpUserResourceKey",
        "params" : "com.linkedin.restli.common.EmptyRecord"
      },
      "supports" : [ "batch_get", "get", "get_all" ],
      "methods" : [ {
        "method" : "get",
        "parameters" : [ {
          "name" : "aspects",
          "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
          "optional" : true
        } ]
      }, {
        "method" : "batch_get",
        "parameters" : [ {
          "name" : "aspects",
          "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
          "optional" : true
        } ]
      }, {
        "method" : "get_all",
        "parameters" : [ {
          "name" : "aspects",
          "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
          "optional" : true
        }, {
          "name" : "filter",
          "type" : "com.linkedin.metadata.query.Filter",
          "optional" : true
        }, {
          "name" : "sort",
          "type" : "com.linkedin.metadata.query.SortCriterion",
          "optional" : true
        } ],
        "pagingSupported" : true
      } ],
      "finders" : [ {
        "name" : "search",
        "parameters" : [ {
          "name" : "input",
          "type" : "string"
        }, {
          "name" : "aspects",
          "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
          "optional" : true
        }, {
          "name" : "filter",
          "type" : "com.linkedin.metadata.query.Filter",
          "optional" : true
        }, {
          "name" : "sort",
          "type" : "com.linkedin.metadata.query.SortCriterion",
          "optional" : true
        } ],
        "metadata" : {
          "type" : "com.linkedin.metadata.query.SearchResultMetadata"
        },
        "pagingSupported" : true
      } ],
      "actions" : [ {
        "name" : "autocomplete",
        "parameters" : [ {
          "name" : "query",
          "type" : "string"
        }, {
          "name" : "field",
          "type" : "string"
        }, {
          "name" : "filter",
          "type" : "com.linkedin.metadata.query.Filter"
        }, {
          "name" : "limit",
          "type" : "int"
        } ],
        "returns" : "com.linkedin.metadata.query.AutoCompleteResult"
      }, {
        "name" : "backfill",
        "parameters" : [ {
          "name" : "urn",
          "type" : "string"
        }, {
          "name" : "aspects",
          "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
          "optional" : true
        } ],
        "returns" : "com.linkedin.metadata.restli.BackfillResult"
      }, {
        "name" : "getSnapshot",
        "parameters" : [ {
          "name" : "urn",
          "type" : "string"
        }, {
          "name" : "aspects",
          "type" : "{ \"type\" : \"array\", \"items\" : \"string\" }",
          "optional" : true
        } ],
        "returns" : "com.linkedin.metadata.snapshot.CorpUserSnapshot"
      }, {
        "name" : "ingest",
        "parameters" : [ {
          "name" : "snapshot",
          "type" : "com.linkedin.metadata.snapshot.CorpUserSnapshot"
        } ]
      } ],
      "entity" : {
        "path" : "/corpUsers/{corpUser}",
        "subresources" : [ {
          "annotations" : {
            "deprecated" : { }
          },
          "name" : "editableInfo",
          "namespace" : "com.linkedin.identity",
          "path" : "/corpUsers/{corpUser}/editableInfo",
          "schema" : "com.linkedin.identity.CorpUserEditableInfo",
          "doc" : "Rest.li entry point: /corpUsers/{corpUserKey}/editableInfo\n\ngenerated from: com.linkedin.metadata.resources.identity.CorpUsersEditableInfoResource",
          "collection" : {
            "identifier" : {
              "name" : "editableInfoId",
              "type" : "long"
            },
            "supports" : [ "create", "get" ],
            "methods" : [ {
              "method" : "create"
            }, {
              "method" : "get"
            } ],
            "entity" : {
              "path" : "/corpUsers/{corpUser}/editableInfo/{editableInfoId}"
            }
          }
        } ]
      }
    }
  }
}