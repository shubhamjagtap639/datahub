# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
play.crypto.secret = "changeme"
play.crypto.secret = ${?WHZ_SECRET}

# The application languages
# ~~~~~
play.i18n.langs = [ "en" ]

# Play http parser settings
#
# Increase default buffer size to handle large post request
play.http.parser.maxMemoryBuffer = 10MB

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# play.http.router = my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.username=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# play.evolutions.enabled=false

# You can disable evolutions for a specific datasource if necessary
# play.evolutions.db.default.enabled=false

app.version = "$YOUR_APP_VERSION"

# Disable HTTPS redirection by default
https.redirect = false

datasets.tree.name = "/var/tmp/wherehows/resource/dataset.json"
datasets.tree.name = ${?DATASETS_TREE_NAME}
flows.tree.name = "/var/tmp/wherehows/resource/flow.json"
flows.tree.name = ${?FLOWS_TREE_NAME}

database.opensource.username = ${WHZ_DB_USERNAME}
database.opensource.password = ${WHZ_DB_PASSWORD}
database.opensource.url = ${WHZ_DB_URL}

# Hibernate HIKARICP connection driver name
# HikariCP is an open source JDBC connection pooling library
hikaricp.dataSourceClassName = "com.mysql.jdbc.jdbc2.optional.MysqlDataSource"
hikaricp.dataSourceClassName = ${?WHZ_DB_DSCLASSNAME}

# dialect for DB
# example values for different db: org.hibernate.dialect.MySQL5InnoDBDialect, org.hibernate.dialect.H2Dialect
hikaricp.dialect = "org.hibernate.dialect.MySQL5InnoDBDialect"
hikaricp.dialect = ${?WHZ_DB_DIALECT}

search.engine = "default"
search.engine = ${?WHZ_SEARCH_ENGINE}

elasticsearch.dataset.url = ${WHZ_ES_DATASET_URL}
elasticsearch.metric.url = ${WHZ_ES_METRIC_URL}
elasticsearch.flow.url = ${WHZ_ES_FLOW_URL}

dataset.hdfs_browser.link = "https://localhost:8888/filebrowser/#"
dataset.hdfs_browser.link = ${?YOUR_HDFS_BROWSER_LINK}

lineage.look.back.time = 60
lineage.look.back.time = ${?LINEAGE_LOOK_BACK_TIME}

# Tracking
# ~~~~~
tracking.piwik.siteid = "change_to_piwik_site_id"
tracking.piwik.siteid = ${?PIWIK_SITE_ID}
tracking.piwik.url = "change_to_piwik_endpoint_url"
tracking.piwik.url = ${?PIWIK_URL}

# Avatar Entity
# ~~~~~
# Defines properties to be used to generate avatar entity url e.g. people, organisations
linkedin.links.avi.urlPrimary = "change_to_avi_url"
linkedin.links.avi.urlPrimary = ${?WHZ_AVI_PRIMARY}

linkedin.links.avi.urlFallback = "change_to_avi_fallback_url"
linkedin.links.avi.urlFallback = ${?WHZ_AVI_FALLBACK}